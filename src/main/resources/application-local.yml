server:
  port: 8081

#spring:
#  cloud:
#    discovery:
#      client:
#        simple:
#          instances:
#            # 'my-backend-service'에 대한 인스턴스 정의
#            # service Discovery가 없으면, 서비스 인스턴스 위치(호스트의 포트)를 알아야 클라이언트가 직접 호출 가능
#            # 호스트:포트 목록을 직접 명시해서 여러 인스턴스를 등록해두고,
#            # 클라이언트에서 이를 기반으로 라운드로빈 등 간단한 로드밸런싱을 수행
#            alim-service:
#              - service-id: alim-service
#                uri: http://localhost:8082
#              - service-id: alim-service
#                uri: http://localhost:8082

eureka:
  instance:
    prefer-ip-address: true
#    lease-renewal-interval-in-seconds: 10 # 하트비트 간격(기본 30초)
#    lease-expiration-duration-in-seconds: 30 # 만료 시간(기본 90초)
  client:
    # 유레카 서버에 서비스 등록
    register-with-eureka: true
    # 서비스 목록 가져와야함?
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/


spring:
  datasource:
    url: jdbc:mysql://localhost:13306/user?serverTimezone=UTC&useSSL=true&autoReconnect=true&useUnicode=true&characterEncoding=utf-8
    username: user
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-test-query: SELECT 1 # HikariCP 유효성 검사 추가
      validation-timeout: 5000
  jpa:
    hibernate:
      ddl-auto: create # 오직 테스트 환경에서만
    generate-ddl: true # 오직 테스트 환경에서만 (spring.jpa.generate-ddl)
    show-sql: true
    open-in-view: false
    # properties:
    #   hibernate:
    #     dialect: org.hibernate.dialect.MySQL8Dialect